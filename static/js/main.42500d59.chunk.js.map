{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitals","msg","Navbar","mode","href","title","id","onClick","toggelMode","htmlFor","TextForm","useState","text","settext","color","Header","onChange","event","target","value","background","rows","disabled","length","newtext","showalert","split","filter","element","prototype","titile","PropTypes","string","App","setmode","setAlert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42500d59.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitals=(word)=>{\r\n            const lower = word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n        <div style={{height:\"50px\"}}>    \r\n     {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{capitals(props.alert.type)} </strong> : {props.alert.msg}\r\n            \r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n     <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">TextConverter</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">about</a>\r\n        </li>\r\n         </ul>\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-5`}>\r\n        <input className=\"form-check-input\"  onClick={props.toggelMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n    </div>\r\n  </div>\r\n</nav>\r\n      </>\r\n  )\r\n}\r\n Navbar.prototype={\r\n   titile: PropTypes.string}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n     \r\n    const handleclick= ()=>{\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext)\r\n        props.showalert(\"converted to uppercase\",\"success\");\r\n    }\r\n    \r\n    const lowerclick= ()=>{\r\n      let newtext = text.toLowerCase();\r\n      settext(newtext)\r\n      props.showalert(\"converted to uppercase\",\"success\");\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n    const cleartext=()=>{\r\n      let newtext=\"\"\r\n      settext(newtext)\r\n      props.showalert(\" text cleared\",\"success\");\r\n    }\r\n\r\n    \r\n    \r\n    const handleonchange = (event) =>{\r\n            settext(event.target.value)    \r\n    }\r\n\r\n\r\n    const [text,settext] = useState(\"\") \r\n\r\n  return (\r\n    <div className=\"container\" style={{ color: props.mode ==='dark'?'white':'black'}}>\r\n       <h1 >{props.Header}</h1>\r\n        <div className=\"mb-3 \">\r\n        <textarea className=\"form-control\" id=\"mybox\" onChange={handleonchange} style={{background:props.mode==='dark'?'grey':'white',\r\n      color:props.mode==='dark'?'white':'black'}} value={text} rows=\"8\"></textarea>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-3 \"onClick={handleclick}  > Convert To Upppercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-3\"onClick={ cleartext}  > Clear Text</button>\r\n        {/*<button className=\"btn btn-primary my-3 mx-3\"onClick={copytext}  > Copy Text</button>*/}\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-3\"onClick={lowerclick}  > Convert To lowercasae</button>\r\n        {/*<button className=\"btn btn-primary my-3 mx-3\"onClick={handleclick}  > Convert To Upppercase</button>*/}\r\n        </div>\r\n          <div className=\"container\">\r\n            <h3>your text summary</h3>\r\n            <p>word {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} character {text.length}</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{ return element.length!==0}).length} minutes read</p>\r\n            <p>preview :  {text}</p>\r\n           \r\n                    \r\n          </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App(props) {\n\n  const [mode , setmode] = useState(\"light\");\n  const [alert , setAlert] = useState(null);\n  const showalert =(message, type)=>{\n    setAlert({\n             msg: message,\n             type:type\n            })\n              setTimeout(() => {\n               setAlert(null);\n         }, 1500);\n      \n\n  }\n\n  const toggelMode =()=>{\n    \n    if(mode===\"light\"){\n      setmode('dark');\n      document.body.style.backgroundColor=\"grey\"\n      showalert(\"dark mode has been enabled\", \"success\");\n      document.title='kulvin-dark mode';\n      \n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor=\"white\"\n      showalert(\"light mode has been enabled\", \"success\");\n      document.title='kulvin-light mode';\n    }\n  }\n\n  return (\n    <> \n     <Navbar title=\"kulvin\" mode= {mode} toggelMode={toggelMode} />\n     <Alert alert={alert}/>\n     <div className=\"container\">\n     <TextForm showalert={showalert}Header=\"Enter your Text to analysis\" mode={mode}/>\n     </div>\n      \n    </>\n    \n  );  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}